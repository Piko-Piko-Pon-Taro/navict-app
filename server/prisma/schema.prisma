datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
  shadowDatabaseUrl = env("API_SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// FIXME: タイミングを見て削除する。
model Task {
  id    Int     @id @default(autoincrement())
  label String
  done  Boolean @default(false)
}

// # 確認事項
// ## 全体
// - リレーション周りは問題ないか？
// ## テーブル単位
// - 要らないフィールドは無いか？
// - 足りないフィールドは無いか？
// - createdAt, updatedAt はいるか？
// - deletedAtはいるか？
// ## フィールド単位
// - 型はあってるか？
// - 必須かどうか
// - uniqueかどうか
// - default値はいるか
// ## cascade delete, update大丈夫？？

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String?   @unique
  bio         String?
  img         String
  twitterLink String?
  githubLink  String?
  websiteLink String?
  googleUid   String?   @unique
  twitterUid  String?   @unique
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  roadmaps    Roadmap[]
  likes       Like[]
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  createAt DateTime  @default(now())
  updateAt DateTime  @updatedAt
  roadmaps Roadmap[]
}

model Roadmap {
  id              Int      @id @default(autoincrement())
  title           String
  description     String?
  isDone          Boolean  @default(false)
  createAt        DateTime @default(now())
  updateAt        DateTime @updatedAt
  userId          Int
  user            User     @relation(fields: [userId], references: [id])
  tags            Tag[]
  steps           Step[]
  likes           Like[]
  forkedRoadmapId Int?
  firstStepId     Int
}

// createdAt要らなそう
// updatedAt要らなそう
// isDeletedいれるか？
model Like {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now())
  updateAt  DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  roadmapId Int
  roadmap   Roadmap  @relation(fields: [roadmapId], references: [id])
}

model Step {
  id         Int      @id @default(autoincrement())
  memo       String?
  isDone     Boolean  @default(false)
  createAt   DateTime @default(now())
  updateAt   DateTime @updatedAt
  roadmapId  Int
  roadmap    Roadmap  @relation(fields: [roadmapId], references: [id])
  libraryId  Int
  library    Library  @relation(fields: [libraryId], references: [id])
  nextNodeId Int?
}

model Library {
  id            Int      @id @default(autoincrement())
  title         String
  link          String   @unique
  affiliateLink String?
  createAt      DateTime @default(now())
  updateAt      DateTime @updatedAt
  steps         Step[]
}